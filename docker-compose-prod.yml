services:
  bot:
    depends_on:
      - db16
      - chartmaker
      - valkey
    image: ghcr.io/slazurin/maple-culvert-tracker/bot
    restart: unless-stopped
    env_file: .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.priority=100"
      - "traefik.http.routers.api.rule=Host(`${LETSENCRYPT_HOSTNAME}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.routers.api.service=api-service"
      - "traefik.http.routers.api.tls.options=modern@file"
      - "traefik.http.routers.api.middlewares[0]=hsts-header"
      - "traefik.http.routers.api.middlewares[1]=redirect-to-https"
      - "traefik.http.services.api-service.loadbalancer.server.port=8080"
  chartmaker:
    image: ghcr.io/slazurin/maple-culvert-tracker/chartmaker
    restart: unless-stopped
    init: true
    environment:
      - NODE_ENV=production
  valkey:
    image: valkey/valkey:7.2-alpine
    volumes:
      - mapleculverttracker_valkey_data:/data
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
  db16:
    image: postgres:16-alpine
    volumes:
      - mapleculverttracker_pg16_data:/var/lib/postgresql/data
      - ./sqlfiles:/root/sqlfiles
    restart: unless-stopped
    env_file:
      - .env
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
  web:
    image: ghcr.io/slazurin/maple-culvert-tracker/web
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    init: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static.priority=10"
      - "traefik.http.routers.static.rule=Host(`${LETSENCRYPT_HOSTNAME}`) && PathPrefix(`/`)"
      - "traefik.http.routers.static.entrypoints=websecure"
      - "traefik.http.routers.static.tls.certresolver=myresolver"
      - "traefik.http.routers.static.service=static-service"
      - "traefik.http.routers.static.tls.options=modern@file"
      - "traefik.http.routers.static.middlewares[0]=hsts-header"
      - "traefik.http.routers.static.middlewares[1]=redirect-to-https"
      - "traefik.http.services.static-service.loadbalancer.server.port=8080"
  periodicredis:
    depends_on:
      - valkey
    image: ghcr.io/slazurin/maple-culvert-tracker/periodicredis
    restart: unless-stopped
    env_file: .env
  cron:
    image: ghcr.io/slazurin/maple-culvert-tracker/cron
    restart: unless-stopped
    env_file:
      - .env
    init: true
    entrypoint: sh
    command: ["-c", "/usr/sbin/crond -f -c /etc/cron"]
  watchtower:
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - "--rolling-restart"
  traefik:
    depends_on:
      - bot
      - web
    image: traefik:v3
    restart: unless-stopped
    volumes:
      # - traefik.yml:/etc/traefik/traefik.yml # Do not use, since we depend on env variables defined during deployment
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
      - ./traefik:/configs
    ports:
      - 80:80
      - 8080:8080
      - 443:443
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/configs/"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entryPoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
volumes:
  mapleculverttracker_pg16_data:
  mapleculverttracker_valkey_data:
  letsencrypt:
