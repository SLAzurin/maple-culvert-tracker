//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var CharacterCulvertScores = newCharacterCulvertScoresTable("public", "character_culvert_scores", "")

type characterCulvertScoresTable struct {
	postgres.Table

	// Columns
	ID          postgres.ColumnInteger
	CulvertDate postgres.ColumnDate
	CharacterID postgres.ColumnInteger
	Score       postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type CharacterCulvertScoresTable struct {
	characterCulvertScoresTable

	EXCLUDED characterCulvertScoresTable
}

// AS creates new CharacterCulvertScoresTable with assigned alias
func (a CharacterCulvertScoresTable) AS(alias string) *CharacterCulvertScoresTable {
	return newCharacterCulvertScoresTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CharacterCulvertScoresTable with assigned schema name
func (a CharacterCulvertScoresTable) FromSchema(schemaName string) *CharacterCulvertScoresTable {
	return newCharacterCulvertScoresTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CharacterCulvertScoresTable with assigned table prefix
func (a CharacterCulvertScoresTable) WithPrefix(prefix string) *CharacterCulvertScoresTable {
	return newCharacterCulvertScoresTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CharacterCulvertScoresTable with assigned table suffix
func (a CharacterCulvertScoresTable) WithSuffix(suffix string) *CharacterCulvertScoresTable {
	return newCharacterCulvertScoresTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCharacterCulvertScoresTable(schemaName, tableName, alias string) *CharacterCulvertScoresTable {
	return &CharacterCulvertScoresTable{
		characterCulvertScoresTable: newCharacterCulvertScoresTableImpl(schemaName, tableName, alias),
		EXCLUDED:                    newCharacterCulvertScoresTableImpl("", "excluded", ""),
	}
}

func newCharacterCulvertScoresTableImpl(schemaName, tableName, alias string) characterCulvertScoresTable {
	var (
		IDColumn          = postgres.IntegerColumn("id")
		CulvertDateColumn = postgres.DateColumn("culvert_date")
		CharacterIDColumn = postgres.IntegerColumn("character_id")
		ScoreColumn       = postgres.IntegerColumn("score")
		allColumns        = postgres.ColumnList{IDColumn, CulvertDateColumn, CharacterIDColumn, ScoreColumn}
		mutableColumns    = postgres.ColumnList{CulvertDateColumn, CharacterIDColumn, ScoreColumn}
	)

	return characterCulvertScoresTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		CulvertDate: CulvertDateColumn,
		CharacterID: CharacterIDColumn,
		Score:       ScoreColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
